{"version":3,"file":"static/js/933.fa8d210e.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/UI/Input/Input.jsx","components/AppContacts/AppContacts.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactListItem/ContactListItem.styled.jsx","components/ContactFormEdit/ContactFormEdit.styled.js","components/ContactFormEdit/ContactFormEdit.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/UI/Title/Title.styled.js","components/UI/Title/Title.jsx","components/AppContacts/AppContacts.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  background-color: ${p => p.theme.colors.backgroundColors};\n  color: ${p => p.theme.colors.colorText};\n  padding: 10px;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  justify-content: center;\n  margin: 0 auto;\n  box-shadow: 0px 0px 19px 0px rgba(69, 162, 158, 1);\n  border-radius: 10px;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    align-items: flex-end;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\nexport const Span = styled.span`\n  margin-bottom: 2px;\n  font-weight: 600;\n`;\n\nexport const Input = styled.input`\n  color: ${p => p.theme.colors.btnĞ¡olorText};\n  border: 1px solid ${p => p.theme.colors.white};\n  padding: 8px;\n  padding-left: 16px;\n  border-radius: 8px;\n\n  &:active,\n  &:focus {\n    outline: transparent;\n  }\n`;\n\nexport const Button = styled.button`\n  display: block;\n  min-width: 130px;\n  height: 35px;\n  color: ${p => p.theme.colors.btnĞ¡olorText};\n  background-color: ${p => p.theme.colors.colorElement};\n  border-radius: 20px;\n  padding: 7px 10px;\n  border: 0;\n  font-size: 18px;\n  transition: box-shadow 250ms ease, transform 250ms ease;\n  cursor: pointer;\n  &:hover {\n    transform: scale(1.05);\n    box-shadow: ${p => p.theme.boxShadow};\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { Input } from '../../ContactForm/ContactForm.styled';\n\nexport const InputElement = props => {\n  return <Input {...props} />;\n};\n\nInputElement.protoType = {\n  props: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 20px 20px;\n`;\n\nexport const Container = styled.div`\n  margin-top: 12px;\n  box-shadow: 0px 0px 19px 0px rgba(69, 162, 158, 1);\n  padding: 10px;\n  border-radius: 10px;\n  text-align: center;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const getFilterValue = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, getFilterValue],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import React, { useState } from 'react';\nimport { PatternFormat } from 'react-number-format';\nimport PropTypes from 'prop-types';\n\nimport { Form, Label, Input, Span, Button } from './ContactForm.styled';\nimport { InputElement } from '../UI/Input/Input';\nimport { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const ContactForm = ({ text }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectFilteredContacts);\n  const [newContact, setNewContact] = useState({ name: '', number: '' });\n\n  const handleChange = evt => {\n    setNewContact(prev => {\n      return { ...prev, [evt.target.name]: evt.target.value };\n    });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const name = evt.currentTarget.name.value.trim();\n    const number = evt.currentTarget.number.value.trim();\n\n    if (!name) {\n      return;\n    }\n\n    if (!number) {\n      return;\n    }\n\n    const isNameExist = contacts.some(contact => contact.name === name);\n    if (isNameExist) {\n      toast.error(`${name} is already in the list`);\n      return;\n    }\n\n    const isNumberxist = contacts.some(contact => contact.number === number);\n    if (isNumberxist) {\n      toast.error(`${number} is already in the list`);\n      return;\n    }\n\n    dispatch(addContact(newContact));\n    toast.success('Contact added. â');\n    setNewContact({ name: '', number: '' });\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        <Span>Name</Span>\n        <InputElement\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          title=\"Contact name\"\n          value={newContact.name}\n          required\n        />\n      </Label>\n\n      <Label>\n        <Span>Number</Span>\n        <PatternFormat\n          customInput={Input}\n          value={newContact.number}\n          format=\"+38 (###)-###-##-##\"\n          allowEmptyFormatting\n          mask=\"_\"\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">{text}</Button>\n    </Form>\n  );\n};\n\nContactForm.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Div = styled.div`\n  background-color: ${p => p.theme.colors.backgroundColors};\n  color: ${p => p.theme.colors.colorText};\n  padding: 10px 20px;\n  display: inline-block;\n  border-radius: 10px;\n  margin-bottom: 10px;\n  text-align: center;\n`;\n\nexport const Span = styled.span`\n  display: block;\n  font-size: 20px;\n  margin-bottom: 10px;\n\n  @media (min-width: 768px) {\n    margin-right: 10px;\n  }\n`;\n\nexport const Input = styled.input`\n  color: ${p => p.theme.colors.btnĞ¡olorText};\n  border: 1px solid ${p => p.theme.colors.white};\n  padding: 8px;\n  padding-left: 16px;\n  border-radius: 8px;\n\n  &:active,\n  &:focus {\n    outline: transparent;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { Div, Input, Span } from './Filter.styled';\nimport { filterContacts } from 'redux/filter/slice';\n\nexport const Filter = () => {\n  const value = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const contactSearch = e => {\n    dispatch(filterContacts(e.target.value));\n  };\n  return (\n    <Div>\n      <label>\n        <Span>Find contacts by name:</Span>\n        <Input type=\"text\" value={value} onChange={contactSearch} />\n      </label>\n    </Div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n  margin-top: 12px;\n  box-shadow: 0px 0px 19px 0px rgba(69, 162, 158, 1);\n  padding: 10px;\n  border-radius: 10px;\n  min-height: 300px;\n`;\n\nexport const List = styled.ul`\n  position: relative;\n  gap: 10px;\n  border-radius: 10px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport const Error = styled.p`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  color: ${p => p.theme.colors.white};\n  font-size: 40px;\n  text-align: center;\n  background-color: ${p => p.theme.colors.backgroundColors};\n  padding: 20px 30px;\n  border-radius: 10px;\n  box-shadow: ${p => p.theme.sectionShadow};\n  z-index: 2;\n  width: 100%;\n  height: 100%;\n`;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.backgroundColors};\n  font-weight: 700;\n  font-style: italic;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  padding: 10px 10px;\n  border-radius: 10px;\n  transition: box-shadow 250ms ease, transform 250ms ease;\n  width: 260px;\n\n  padding: 5px;\n  &:hover {\n    transform: scale(1.05);\n    box-shadow: ${p => p.theme.sectionShadow};\n  }\n`;\n\nexport const ContactNameWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const ContactNumberWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const ContactButtonsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin-left: auto;\n`;\n\nexport const Span = styled.span`\n  font-weight: 500;\n`;\n\nexport const Button = styled.button`\n  color: ${p => p.theme.colors.btnĞ¡olorText};\n  background-color: ${p => p.theme.colors.colorElement};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 5px;\n  padding: 3px 3px;\n  border: 0;\n  transition: box-shadow 250ms ease, transform 250ms ease;\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.1);\n    box-shadow: ${p => p.theme.sectionShadow};\n  }\n`;\n","import styled from 'styled-components';\nimport TextField from '@mui/material/TextField';\n\nexport const Form = styled.form`\n  background-color: ${p => p.theme.colors.backgroundColors};\n  color: ${p => p.theme.colors.colorText};\n  max-width: 360px;\n  padding: 10px;\n  border-radius: 10px;\n  display: flex;\n  align-items: flex-end;\n  flex-direction: column;\n  box-shadow: 0px 0px 19px 0px rgba(69, 162, 158, 1);\n  border-radius: 10px;\n\n  @media (min-width: 400px) {\n    width: 300px;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  width: 100%;\n`;\nexport const Span = styled.span`\n  margin-bottom: 3px;\n`;\n\nexport const Input = styled.input`\n  color: ${p => p.theme.colors.btnĞ¡olorText};\n  border: 1px solid ${p => p.theme.colors.white};\n  padding: 8px;\n  padding-left: 16px;\n  border-radius: 8px;\n\n  &:active,\n  &:focus {\n    outline: transparent;\n  }\n`;\n\nexport const Button = styled.button`\n  display: block;\n  min-width: 130px;\n  height: 35px;\n  margin-left: auto;\n  margin-right: auto;\n  cursor: pointer;\n  background-color: ${p => p.theme.colors.colorElement};\n  border-radius: 20px;\n  padding: 7px 10px;\n  border: 0;\n  font-size: 18px;\n  transition: box-shadow 250ms ease, transform 250ms ease;\n  &:hover {\n    transform: scale(1.1);\n    box-shadow: ${p => p.theme.sectionShadow};\n  }\n`;\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 auto;\n  max-width: 400px;\n`;\n\nexport const StyledTextField = styled(TextField)`\n  && {\n    margin-bottom: 20px;\n    width: 100%;\n  }\n`;\n","import React, { useState } from 'react';\nimport { PatternFormat } from 'react-number-format';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { Form, Label, Input, Span, Button } from './ContactFormEdit.styled';\nimport { InputElement } from '../UI/Input/Input';\nimport { patchContacts } from 'redux/contacts/operations';\n\nexport const ContactFormEdit = ({ modalClose, contact }) => {\n  const dispatch = useDispatch();\n\n  const [changedContact, setChangedContact] = useState(contact);\n\n  const handleChange = evt => {\n    console.log(changedContact);\n    setChangedContact(prev => {\n      return { ...prev, [evt.target.name]: evt.target.value };\n    });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    dispatch(patchContacts(changedContact));\n    modalClose();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        <Span>Name</Span>\n\n        <InputElement\n          value={changedContact.name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          required\n          title=\"Enter contact name\"\n        />\n      </Label>\n\n      <Label>\n        <Span>Number</Span>\n        <PatternFormat\n          customInput={Input}\n          format=\"+38 (###)-###-##-##\"\n          allowEmptyFormatting\n          mask=\"_\"\n          value={changedContact.number}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Save</Button>\n    </Form>\n  );\n};\n\nContactFormEdit.propTypes = {\n  modalClose: PropTypes.func.isRequired,\n  contact: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalContainer = styled.div`\n  position: relative;\n  background-color: white;\n  padding: 20px 15px;\n  max-width: 700px;\n  max-height: 300px;\n  background-color: ${p => p.theme.colors.backgroundColors};\n  border-radius: 10px;\n  box-shadow: ${p => p.theme.sectionShadow};\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background-color: ${p => p.theme.colors.colorElement};\n  border: 1px solid ${p => p.theme.colors.colorElement};\n  color: black;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    border 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &::before {\n    content: '';\n    position: absolute;\n    background-color: black;\n    left: 50%;\n    top: 50%;\n    width: 13px;\n    height: 2px;\n    transform: translate(-50%, -50%) rotate(-45deg);\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  &::after {\n    content: '';\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    background-color: black;\n\n    width: 13px;\n    height: 2px;\n    transform: translate(-50%, -50%) rotate(45deg);\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  &:hover,\n  &:focus {\n    border: 1px solid ${p => p.theme.colors.backgroundColors};\n    box-shadow: ${p => p.theme.sectionShadow};\n\n    transform: scale(1.2);\n    &::after,\n    &::before {\n      background-color: black;\n    }\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport { ContactFormEdit } from 'components/ContactFormEdit/ContactFormEdit';\n\nimport { Overlay, ModalContainer, Button } from './Modal.styled';\n\nexport const Modal = ({ onClose, contact }) => {\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n  const handlerKeydown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('keydown', handlerKeydown);\n    return () => {\n      window.removeEventListener('keydown', handlerKeydown);\n    };\n  });\n\n  return createPortal(\n    <Overlay onClick={handleBackdropClick}>\n      <ModalContainer>\n        <Button title=\"Close modal\" onClick={onClose}></Button>\n        <ContactFormEdit\n          text={'Update contact'}\n          modalClose={onClose}\n          contact={contact}\n        />\n      </ModalContainer>\n    </Overlay>,\n    document.getElementById('modal-root')\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  contact: PropTypes.object.isRequired,\n};\n","import React from 'react';\nimport { BsTrash, BsPersonCircle, BsPen } from 'react-icons/bs';\nimport {\n  Button,\n  ContactButtonsWrapper,\n  ContactNameWrapper,\n  ContactNumberWrapper,\n  Item,\n  Span,\n} from './ContactListItem.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/auth/selectors';\nimport { useState } from 'react';\nimport { Modal } from 'components/Modal/Modal';\nimport { toast } from 'react-toastify';\n\nexport function ContactListItem({ contact }) {\n  const [isOpenModal, setIsOpenModal] = useState(false);\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n    toast.info('Contact deleted. â ');\n  };\n\n  const openModal = () => {\n    setIsOpenModal(true);\n  };\n  const toggleModal = () => {\n    setIsOpenModal(isOpenModal => !isOpenModal);\n  };\n\n  return (\n    <Item>\n      <ContactNameWrapper>\n        <BsPersonCircle />\n        <Span>{contact.name} </Span>\n      </ContactNameWrapper>\n      <ContactNumberWrapper>\n        <Span>{contact.number}</Span>\n        <ContactButtonsWrapper>\n          <Button\n            type=\"button\"\n            disabled={isLoading}\n            onClick={() => openModal(contact.id)}\n            title=\"Change contact\"\n          >\n            <BsPen />\n          </Button>\n          <Button\n            type=\"button\"\n            disabled={isLoading}\n            onClick={() => handleDeleteContact(contact.id)}\n            title=\"Delete contact\"\n          >\n            <BsTrash />\n          </Button>\n        </ContactButtonsWrapper>\n      </ContactNumberWrapper>\n      {isOpenModal && <Modal onClose={toggleModal} contact={contact} />}\n    </Item>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { Loading } from 'components/UI/Loading/Loading';\nimport { List, Error, Container } from './ContactList.styled';\nimport {\n  selectIsLoading,\n  selectError,\n  selectFilteredContacts,\n} from 'redux/contacts/selectors';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  return (\n    <Container>\n      <List>\n        {isLoading && <Loading visible={isLoading} />}\n        {error && <Error>{error}</Error>}\n        {contacts.map(contact => (\n          <ContactListItem key={contact.id} contact={contact} />\n        ))}\n      </List>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  color: ${p => p.theme.colors.colorText};\n  margin-bottom: 10px;\n  margin-top: 0;\n  text-align: center;\n  font-size: 34px;\n`;\n","import PropTypes from 'prop-types';\n\nimport { Title } from './Title.styled';\n\nexport const Caption = ({ title }) => {\n  return <Title>{title}</Title>;\n};\n\nCaption.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport { Wrapper, Container } from './AppContacts.styled';\nimport { ContactForm } from '../ContactForm/ContactForm';\nimport { Filter } from '../Filter/Filter';\nimport { ContactList } from '../ContactList/ContactList';\nimport { Caption } from '../UI/Title/Title';\n\nexport const AppContacts = () => {\n  return (\n    <Wrapper>\n      <Caption title=\"Phonebook\" />\n      <ContactForm text={'Add contact'} />\n      <Container>\n        <Caption title=\"Contacts\" />\n        <Filter />\n      </Container>\n      <ContactList />\n    </Wrapper>\n  );\n};\n","import { AppContacts } from 'components/AppContacts/AppContacts';\nimport { useAuth } from 'hooks';\nimport { LoadingUser } from 'components/UI/Loading/Loading';\n\nconst Contacts = () => {\n  const { isLoading } = useAuth();\n  return (\n    <>\n      {isLoading && <LoadingUser />}\n      <AppContacts />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Form","styled","p","theme","colors","backgroundColors","colorText","Label","Span","Input","btnĞ¡olorText","white","Button","colorElement","boxShadow","InputElement","props","protoType","PropTypes","Wrapper","Container","selectIsLoading","state","contacts","isLoading","selectError","error","selectFilteredContacts","createSelector","items","filter","contact","name","toLowerCase","includes","ContactForm","text","dispatch","useDispatch","useSelector","useState","number","newContact","setNewContact","handleChange","evt","prev","target","value","onSubmit","preventDefault","currentTarget","trim","some","toast","addContact","onChange","type","title","required","customInput","format","allowEmptyFormatting","mask","pattern","Div","Filter","e","filterContacts","List","Error","sectionShadow","Item","ContactNameWrapper","ContactNumberWrapper","ContactButtonsWrapper","ContactFormEdit","TextField","modalClose","changedContact","setChangedContact","console","log","patchContacts","Overlay","ModalContainer","Modal","onClose","handlerKeydown","code","useEffect","window","addEventListener","removeEventListener","createPortal","onClick","document","getElementById","ContactListItem","isOpenModal","setIsOpenModal","disabled","id","deleteContact","ContactList","fetchContacts","Loading","visible","map","Title","Caption","AppContacts","useAuth"],"sourceRoot":""}